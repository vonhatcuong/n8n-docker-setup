# N8N Docker Compose - 2025 Best Practices
# Based on official n8n-hosting repository + production enhancements

services:
    postgres:
        image: postgres:16-alpine
        container_name: n8n_postgres
        restart: unless-stopped
        environment:
            - POSTGRES_USER
            - POSTGRES_PASSWORD
            - POSTGRES_DB
            - POSTGRES_NON_ROOT_USER
            - POSTGRES_NON_ROOT_PASSWORD
        volumes:
            - db_storage:/var/lib/postgresql/data
            - ./init-data-2025.sh:/docker-entrypoint-initdb.d/init-data.sh
        healthcheck:
            test:
                [
                    'CMD-SHELL',
                    'pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}',
                ]
            interval: 10s
            timeout: 5s
            retries: 5
            start_period: 30s
        networks:
            - n8n_network
        logging:
            driver: 'json-file'
            options:
                max-size: '10m'
                max-file: '3'

    n8n:
        image: docker.n8n.io/n8nio/n8n:latest # Official 2025 image URL
        container_name: n8n_app
        restart: unless-stopped
        environment:
            # Database configuration (using non-root user)
            - DB_TYPE=postgresdb
            - DB_POSTGRESDB_HOST=postgres
            - DB_POSTGRESDB_PORT=5432
            - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
            - DB_POSTGRESDB_USER=${POSTGRES_NON_ROOT_USER}
            - DB_POSTGRESDB_PASSWORD=${POSTGRES_NON_ROOT_PASSWORD}

            # Core settings
            - N8N_HOST=localhost
            - WEBHOOK_URL=http://localhost:5678/
            - N8N_PROTOCOL=http
            - NODE_ENV=production
            - GENERIC_TIMEZONE=${GENERIC_TIMEZONE}

            # Security settings (from .env)
            - N8N_ENCRYPTION_KEY
            - N8N_USER_MANAGEMENT_JWT_SECRET
            - N8N_BASIC_AUTH_ACTIVE
            - N8N_BASIC_AUTH_USER
            - N8N_BASIC_AUTH_PASSWORD

            # Privacy settings (2025 best practice)
            - N8N_DIAGNOSTICS_ENABLED
            - N8N_PERSONALIZATION_ENABLED

            # Performance settings
            - N8N_PAYLOAD_SIZE_MAX
            - N8N_METRICS
            - N8N_RUNNERS_ENABLED
            - N8N_SECURE_COOKIE
            - N8N_DISABLE_UI

        ports:
            - '127.0.0.1:5678:5678' # Bind only to localhost for security
        volumes:
            - n8n_storage:/home/node/.n8n
            - shared_storage:/data/shared # For file sharing between workflows
        depends_on:
            postgres:
                condition: service_healthy
        networks:
            - n8n_network
        deploy:
            resources:
                limits:
                    memory: 1G
                reservations:
                    memory: 512M
        logging:
            driver: 'json-file'
            options:
                max-size: '10m'
                max-file: '3'

    # pgAdmin for development (optional)
    pgadmin:
        image: dpage/pgadmin4:latest
        container_name: n8n_pgadmin
        restart: unless-stopped
        environment:
            - PGADMIN_DEFAULT_EMAIL=admin@localhost.com
            - PGADMIN_DEFAULT_PASSWORD=${N8N_BASIC_AUTH_PASSWORD}
        ports:
            - '127.0.0.1:8080:80'
        networks:
            - n8n_network
        profiles:
            - dev
        logging:
            driver: 'json-file'
            options:
                max-size: '5m'
                max-file: '2'

    # Redis for queue mode (optional, for high-scale)
    redis:
        image: redis:7-alpine
        container_name: n8n_redis
        restart: unless-stopped
        volumes:
            - redis_storage:/data
        healthcheck:
            test: ['CMD', 'redis-cli', 'ping']
            interval: 5s
            timeout: 3s
            retries: 5
        networks:
            - n8n_network
        profiles:
            - queue
        logging:
            driver: 'json-file'
            options:
                max-size: '5m'
                max-file: '2'

volumes:
    db_storage:
    n8n_storage:
    shared_storage:
    redis_storage:

networks:
    n8n_network:
        driver: bridge
